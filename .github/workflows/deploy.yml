name: Deploy API to AWS
on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        id: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          script: |
            cd /var/www/html/spend-wise
            chmod +x deploy.sh  # Ensure the script is executable
            set -x  # Enable command tracing for debugging
            ./deploy.sh 2>&1 | tee deploy.log  # Capture logs
      
      - name: Fetch Deployment Logs
        id: fetch_logs
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          script: |
            tail -n 10 /var/www/html/spend-wise/deploy.log > /tmp/recent_logs.txt
            cat /tmp/recent_logs.txt
      
      - name: Check Deployment Logs
        if: failure()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          script: cat /var/www/html/spend-wise/deploy.log || echo "No logs available"
      
      - name: Send Telegram notification
        if: always()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          script: |
            DEPLOY_LOGS=$(cat /tmp/recent_logs.txt || echo "No logs available")
            
            curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
              -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
              -d parse_mode=Markdown \
              -d text="Deployment Status: ${{ job.status == 'success' && '✅ Success!' || '❌ Failed!' }}
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.event.after }}
            User: ${{ github.actor }}
            Time: ${{ github.event.repository.updated_at }}
            
            Logs:
            \`\`\`
            $DEPLOY_LOGS
            \`\`\`"
